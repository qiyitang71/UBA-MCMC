Transforming to GFG-NCA gfg-4 

UBA has 15 states
The UBA is unambiguous but not deterministic
f=sigma_0 var=0
f=sigma_1 var=1
f=pi_0 var=2
f=pi_1 var=3
f=hash_0 var=4
f=hash_1 var=5
f=dollar_0 var=6
f=dollar_1 var=7
The max outgoing degree is 2
Minimising DCA
Computing safe components
Computing language equivalence
Now normalise DCA
Computing subsafe language equivalence
Now safe cetralise DCA
Now safe minimise DCA
0.054


PRISM
=====

Version: 4.4.dev
Date: Sun Jan 05 16:28:32 GMT 2025
Hostname: Qiyis-Air.home
Memory limits: cudd=1g, java(heap)=1g
Command line: prism -explicit -gfgmc -ubaverbosity 1 random2.pm -pf 'P=?[ HOA: {"GFGs/gfg-4.hoa", "sigma_0" <- s=0, "pi_0" <- s=1, "hash_0" <- s=2, "dollar_0" <- s=3 }]'

Parsing model file "random2.pm"...

1 property:
(1) P=? [ HOA: { "GFGs/gfg-4.hoa", "sigma_0" <- s=0, "pi_0" <- s=1, "hash_0" <- s=2, "dollar_0" <- s=3 } ]

Type:        DTMC
Modules:     random 
Variables:   s 

---------------------------------------------------------------------

Model checking: P=? [ HOA: { "GFGs/gfg-4.hoa", "sigma_0" <- s=0, "pi_0" <- s=1, "hash_0" <- s=2, "dollar_0" <- s=3 } ]

Building model...

Computing reachable states... 4 states
Reachable states exploration and model construction done in 0.012 secs.
Sorting reachable states list...

Time for model construction: 0.019 seconds.

Type:        DTMC
States:      4 (1 initial)
Transitions: 16
Running DTMC GFG Model Checking...
Parsing and constructing HOA automaton for HOA: { "GFGs/gfg-4.hoa", "sigma_0" <- s=0, "pi_0" <- s=1, "hash_0" <- s=2, "dollar_0" <- s=3 }
Reading HOA automaton from /Users/qiyitang/Documents/UBA-MCMC/case-studies/family-of-UBAs/GFGs/gfg-4.hoa...
Determining states satisfying atomic proposition expressions of the automaton...
GFG has 6 states.
Time for GFG translation: 0.047 seconds.
Start constructing product
labelBS: [{0}, {}, {1}, {}, {2}, {}, {3}, {}]
labelMap: {0=[0, 1], 1=[0, 1], 2=[2, 3], 3=[2, 3], 4=[4, 5], 5=[4, 5], 6=[6, 7], 7=[6, 7]}
statesOfInterest: {0}
s_labels: {}
LMC state0, destinations ={0, 2}
Time for computing GFG-DTMC product: 0.026 seconds,  (product has 24 states).
Time for computing MCC in GFG-DTMC product: 0.007 seconds,  (found 2 non-trivial MCCs).

MCC 1 has 4 states
Time for checking whether MCC 1 is positive: 0.0 seconds,  (MCC is zero, no accepting edges).

MCC 2 has 13 states
Time for building positivity matrix: 0.015 seconds.
Time for checking whether MCC 2 is positive: 0.035 seconds,  (MCC is positive, checked via QR).
Time for generating cut: 0.111 seconds,  (2 iterations, 2712 extension checks, cut tempC has 13 states).
Time for generating cut: 1.736094513018E9 seconds,  (2 iterations, 2712 extension checks, cut C has 4 states).
Time for building matrix for positive MCC probabilities, MCC 2: 0.006 seconds.
Solving MCC 2 probability values...
Time for solving equation system for positive MCC 2: 0.002 seconds.
Sum of probabilities for the cut C = 0.9999999999999999 for MCC 2
Probabilities in MCC 2 are in the range [0.2499999999999999,0.2500000000000001]
Time for computing MCC probabilities for positive MCCs: 0.172 seconds,  (1 positive MCCs, known probabilities for 13 states).
Calculating predecessor relation for Markov decision process...  done (0.007 seconds)
Time for determining states with probability zero: 0.011 seconds,  (11 zero prob. states, 0 remaining unknown).

Value in the initial state: 0.24999999999999997

Time for model checking: 0.278 seconds.

Result: 0.24999999999999997 (value in the initial state)

